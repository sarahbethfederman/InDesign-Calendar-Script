/** InDesign Academic Weekly Calendar Script* by Sarah Federman* Notes:* - add leapyear boolean eventually*/var myDocument = app.documents.add();// Extend Array to include indexOf (not in jsx spec)Array.prototype.indexOf = function (elem, fromIndex){      fromIndex = fromIndex || 0;      for(var i = fromIndex; i < this.length; i++){          if(this[i] == elem){              return i;          }      }      return -1;  }// globalsvar monthsList = ["August", "September", "October", "November", "December", "January", "March", "February", "April", "May", "June", "July"];var days = ["Sunday", "Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var months = {};  // associative array of month name to month object// Month objectvar Month = function() {  // Constructor  function Month (name, startDay, dayCount) {    this.name = name;                   // name of the month    this.startDay = startDay;          // name of first day of the month (ex: August starts on a Friday)    this.dayCount = dayCount;       // total number of days in the month  }  // Methods  Month.prototype.populate = function() {    var day = days.indexOf(this.startDay),        date;            for (var i = 1; i < this.dayCount + 1; i++) {      // create the text frame      var myTextFrame = myDocument.pages[0].textFrames.add();            // place the text frame      myTextFrame.geometricBounds = [ (6 + i)+ "p", (6 + i)+ "p", (24 + i)+ "p", (24 + i)+ "p",];            // fill the text frame      date = i + ": " + days[day];  // ex: "13: Friday"      myTextFrame.contents = date.toString();            // calculate next weekday      day = (day + 1) % 7;    }  }  return Month;}();// end month object// init functionfunction init() {  var startDayIndex = days.indexOf("Friday"),  // August starts on Friday, index of Friday in days array      dayCount,      monthName;      // find how many days are in each month    function findDayCount (month) {      var dayCount;            if (month === "February") {        dayCount = 28;      }      else if (month !== "September" && month !== "April" && month !== "June" && month !== "November") {        dayCount = 31;      }      else {        dayCount = 30;      }            return dayCount;    }  for (var i = 0; i < monthsList.length; i++) {    monthName = monthsList[i];    dayCount = findDayCount(monthName);    // Fill the months associative array (month name to month object)    months[monthName] = new Month(monthName, days[startDayIndex], dayCount);    // Calculate what weekday next month starts on    startDayIndex = (startDayIndex + dayCount) % 7;  }};// call the init functioninit();// test Augustmonths["February"].populate();